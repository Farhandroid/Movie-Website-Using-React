{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/elements/MovieThumb/MovieThumb.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","LoadMoreBtn","onClick","Spinner","MovieThumb","clickable","pathname","movieId","movieName","Home","movies","heroImage","currentPage","totalPage","searchTerm","searchItems","console","log","endpoint","fetchItems","fetch","then","result","json","results","page","totalPages","total_pages","catch","error","loadMore","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","name","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","React","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.766a27b0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"rmdb-logo\"\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"rmdb-logo\"\r\n          ></img>\r\n        </Link>\r\n        :\r\n        <img\r\n          className=\"rmdb-tmdb-logo\"\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"tmdb-logo\"\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/movie/550?api_key=a5b47f1a15480d2da9e3f68d29b2e8d7\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a5b47f1a15480d2da9e3f68d29b2e8d7';\n\n\n\n// a5b47f1a15480d2da9e3f68d29b2e8d7\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500'\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) =>\r\n{\r\n    return(\r\n        <div className='rmdb-heroimage'\r\n            style={{\r\n                background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                39%,rgba(0,0,0,0)\r\n                41%,rgba(0,0,0,0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n\r\n        <div className='rmdb-heroimage-content'>\r\n            <div className='rmdb-heroimage-text'>\r\n                <h1>{props.title}</h1>\r\n                <p>{props.text}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default HeroImage;","import React , {Component} from 'react';\r\nimport './SearchBar.css';\r\n//import FontAwesome from 'react-fontawesome';\r\n//import FontAwesome from '@fortawesome/free-solid-svg-icons';\r\n//import * as Icon from '@fortawesome/react-fontawesome'\r\n\r\n\r\nclass SearchBar extends Component\r\n{\r\n    state={\r\n        value: ''\r\n    }\r\n    timeout= null;\r\n\r\n    doSearch = (event) =>\r\n    {\r\n        this.setState({value: event.target.value}); //After 500ms(not sure) the search will automaticaly called\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout= setTimeout( () => {\r\n            this.props.callback(this.state.value);\r\n        },500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div className='rmdb-searchbar'>\r\n                 <div className='rmdb-searchbar-content'>\r\n                     <input \r\n                        type='text'\r\n                        className='rmdb-searchbar-input'\r\n                        placeholder='SearchBar'\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                    />\r\n               </div>\r\n             </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './FourColGrid.css'\r\n\r\nconst FourColGrid = (props) =>\r\n{\r\n    const renderElements = () => // This function will render every item and make a grid . Then a return . Syntax is a little bit tough . But one day i will understand\r\n    {\r\n        const gridElements = props.children.map( (element , i) => {\r\n            return (\r\n                <div key={i} className='rmdb-grid-element'>{/*Make every element grid and then return*/}\r\n                    {element}\r\n                </div>\r\n            )\r\n        } )\r\n\r\n        return gridElements;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='rmdb-grid'>\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null} {/*If props have header and not loading then h1 tag will send otherwise null*/}\r\n            <div className='rmdb-grid-content'>\r\n                {renderElements()} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport './LoadMoreBtn.css'\r\n\r\nconst LoadMoreBtn = (props) =>\r\n{\r\n    return(\r\n        <div className='rmdb-loadmorebtn' onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () =>\r\n{\r\n    return(\r\n        <div className='loader'></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './MovieThumb.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieThumb = (props) =>\r\n{\r\n    return (\r\n        <div className='rmdb-moviethumb'>\r\n            {props.clickable ?\r\n            <Link to={{ pathname: `${props.movieId}`, movieName: `${props.movieName}`}}>\r\n                <img src={props.image} alt='Moviethumb'/>\r\n            </Link>\r\n            : <img src={props.image} alt='Moviethumb'/> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieThumb;","import React , {Component} from 'react';\r\nimport './Home.css';\r\nimport { API_URL , API_KEY , IMAGE_BASE_URL , BACKDROP_SIZE , POSTER_SIZE } from \"../../config\";\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\n\r\nclass Home extends Component\r\n{\r\n    state= {\r\n        movies: [],\r\n        heroImage:null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPage: 0,\r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n        const endpoint =`${API_URL}movie/popular?api_key=${API_KEY}&language=jp-JP&region=JP&Page=1`\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    searchItems = (searchTerm) =>\r\n    {\r\n        console.log(searchTerm);\r\n        let endpoint=''\r\n        this.setState(\r\n            {\r\n                movies: [],\r\n                loading: true,\r\n                searchTerm    //Since both parameter's name are same so we dont need to set searchTerm\r\n            }\r\n        )\r\n\r\n        if (searchTerm==='') {\r\n            endpoint =`${API_URL}movie/popular?api_key=${API_KEY}&language=jp-JP&region=JP&Page=1`;\r\n        }\r\n        else{\r\n            endpoint=`${API_URL}search/movie?api_key=${API_KEY}&language=jp-JP&query=${searchTerm}`;\r\n        }\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) =>{\r\n        fetch(endpoint)\r\n        .then(result=>result.json())\r\n        .then(result=>{\r\n           this.setState(\r\n               {\r\n                movies: [...this.state.movies,...result.results],//ES6 spread syntax . It appends old movies data with new results. results are an object of result . Which we are getting from api .\r\n                heroImage: this.state.heroImage || result.results[0],//This will check herImmage . If heroImage is null it will be replaced by first image.\r\n                loading: false,                                      //heroimage is an json array\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            } \r\n           )\r\n        })\r\n        .catch(error=>console.error('Error: ',error))\r\n    }\r\n\r\n    loadMore= () =>\r\n    {\r\n        \r\n        let endpoint= ' ';\r\n        if (this.state.searchTerm ==='') {\r\n            endpoint= `${API_URL}movie/popular?api_key=${API_KEY}&language=jp-JP&region=JP&page=${this.state.currentPage+1}`;\r\n        }else{\r\n            endpoint= `${API_URL}search/movie?api_key=${API_KEY}&query${this.state.searchTerm}&language=jp-JP&region=JP&page=${this.state.currentPage+1}`;\r\n        }\r\n        \r\n        this.fetchItems(endpoint);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n             <div className=\"rmdb-home\">\r\n                 {this.state.heroImage ?        //Ternery operator checking if heroImage is null or not.\r\n                    <div>\r\n                        <HeroImage \r\n                            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                            title={this.state.heroImage.original_title}\r\n                            text={this.state.heroImage.overview}\r\n                        />\r\n                        <SearchBar callback={this.searchItems}/>\r\n\r\n                    </div>\r\n                 : null}\r\n                 <FourColGrid \r\n                 header = {this.state.searchTerm ? 'Search Resut ' : 'Popular Movies'}\r\n                 loading={this.state.loading}>\r\n                \r\n                {this.state.movies.map ((element, i) =>{\r\n                    return <MovieThumb \r\n                            key={i}\r\n                            clickable={true}\r\n                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`: './images/no_image.jpg' }\r\n                            movieId={element.id}\r\n                            movieName={element.original_title}\r\n                            />\r\n                } )}\r\n\r\n                 </FourColGrid>\r\n\r\n                 {this.state.loading ? <Spinner /> : null}\r\n\r\n                 {(this.state.currentPage <= this.state.totalPages && !this.state.loading)?\r\n                    <LoadMoreBtn text='Load More' onClick={this.loadMore}/>\r\n                    :null\r\n                }                 \r\n             </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p></p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\n/* ! Font awesome need to be added */\r\nimport  MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\"\r\n      }}>\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : `./images/no_image.jpg`\r\n            }\r\n            clickable={false}/>\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\"value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n            {/* Meter is a html element . Its property is overriden in css */}\r\n          </div>\r\n          {props.directors.length >1 ? <h3>DIRECTORS</h3>: <h3>DIRECTOR</h3>}\r\n          {props.directors.map((element, i) =>{\r\n            return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Convert a number to $ format\r\nexport const convertMoney = money => {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0\r\n  });\r\n  return formatter.format(money);\r\n};\r\n","import React from \"react\";\r\n//Font awesome should be imported\r\nimport { calcTime, convertMoney } from \"../../../helpers\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = (props) =>{\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-col\">\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time : {calcTime(props.time)}</span>\r\n    {/*A fontawesome icon will be here*/}\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-col\">\r\n                    {/*Font awesome icon will be here */}\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget : {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-col\">\r\n    {/*Font Awesome icon will be added */}\r\n                <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\n\r\nconst Actor = (props) => {\r\n  const POSTER_SIZE=\"w154\"\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'} \r\n        alt=\"actorTumb\"\r\n        />\r\n         <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n         <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n   \r\n  )\r\n};\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo  from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar  from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid  from \"../elements/FourColGrid/FourColGrid\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends React.Component {\r\n  state = {\r\n    movie: null,\r\n    actors : null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({loading : true})\r\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=jp-JP&region=JP`\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) =>{\r\n    console.log(endpoint)\r\n    fetch(endpoint)\r\n    .then(result=>result.json())\r\n    .then(result =>{\r\n      console.log(result)\r\n      if (result.status_code) {\r\n        this.setState({loading: false});\r\n      } else {\r\n        this.setState({ movie: result }, () =>{  /*This is a callback function . After setting the movie data data next actor and director data will be loaded */\r\n        const endpoint=`${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\r\n\r\n        fetch(endpoint)\r\n        .then(result=>result.json())\r\n        .then(result=> {\r\n            const directors = result.crew.filter((member)=>member.job===\"Director\"); /*crew and job data are coming from api*/\r\n            this.setState(\r\n              {\r\n                actors: result.cast,\r\n                directors,\r\n                loading: false\r\n              })\r\n            })\r\n        })\r\n      }\r\n    })\r\n    .catch(error => console.error('Error : ', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ?\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName}/>\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors}/>\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue}/>\r\n          </div>\r\n          :null\r\n        }\r\n        { this.state.actors?\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"Actors\"}>\r\n              {this.state.actors.map((element,i) =>{\r\n                return<Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid>\r\n          </div> : null}\r\n          {!this.state.actors && !this.state.loading ? <h1>No Movie Found</h1> : null}\r\n          {this.state.loading ? <Spinner/> : null}\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nconst NotFound = () =>{\r\n    return(\r\n        <div>\r\n            <h1>Whooops .This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport Header from \"./components/elements/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport Movie from \"./components/Movie/Movie\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./components/elements/NotFound/NotFound\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/:movieId\" component={Movie} exact />\n              <Route component={NotFound} />\n            </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}